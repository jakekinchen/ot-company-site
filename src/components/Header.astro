---
import HeaderLink from './HeaderLink.astro';
import Dialog from './Dialog.astro';
import Nav from './react/Nav.jsx';
import { enableGradientFollowById } from '../helpers/gradientFollow';
import MobileMenu from './react/MobileMenu.jsx';
const { background = "transparent", gradient = false, iconColor = "blue", logoColor = "blue" } = Astro.props;

const bgColor = background === "transparent" ? "bg-opacity-0" : background;
const iconFilterColor = iconColor === "blue" ? "filter-blue" : "filter-white";
const logoFilterColor = logoColor === "blue" ? "filter-blue" : "filter-white";
---

<header class={`${bgColor} flex justify-between items-center w-full h-[80px] mt-[1rem]`}>
  <a href="/" class="ml-[5vw]">
    <img src={gradient ? "/ot-gradient-logo.svg" : "/ot-logo.svg"} alt="OneTier Logo" class={gradient ? " " : logoFilterColor} style="width: 10rem;" />
  </a>
  
  <Nav client:only="react" />
  
  <div class="flex items-center mr-[5vw]">
    <img src="/hamburger-menu.svg" alt="Menu" id="hamburgerMenu" class={`hamburger-menu dt:hidden ${iconFilterColor} filter-blue cursor-pointer`}>
    <button id="requestDemo" class="gradient-button mb:hidden">Request Demo</button>
  </div>
  
  <Dialog />
  <MobileMenu client:only="react" />
</header>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.gradient-button');
    buttons.forEach(button => {
      button.addEventListener('mousemove', applyGradientEffect);
      button.addEventListener('mouseleave', resetGradientEffect);
      button.addEventListener('click', openDialog);
    });
    const hamburgerMenu = document.getElementById('hamburgerMenu');
    hamburgerMenu.addEventListener('click', toggleMobileMenu);
  });

  function applyGradientEffect(event) {
    const rect = this.getBoundingClientRect();
    const xPercent = ((event.clientX - rect.left) / rect.width) * 100;
    const yPercent = ((event.clientY - rect.top) / rect.height) * 100;
    this.style.setProperty('--x', `${xPercent}%`);
    this.style.setProperty('--y', `${yPercent}%`);
  }

  function resetGradientEffect() {
    this.style.setProperty('--x', '50%');
    this.style.setProperty('--y', '50%');
  }

  function openDialog() {
    window.dispatchEvent(new CustomEvent('openDialog'));
  }

  function toggleMobileMenu() {
    document.dispatchEvent(new CustomEvent('toggleMobileMenu'));
  }
  
</script>

<style>
	a{
		text-decoration: none;
	}
</style>