---
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Dialog from './Dialog.astro';
import Footer from './Footer.astro';

const { 
  metadata = {},
  title, 
  description, 
  footerLogoGradient=true,
  gradient=false, 
  headerBackground='transparent', 
  headerIconColor='blue', 
  footerBackground='white',
  customBackground=false,
  logoColor='blue',
  headerLogoColor='blue',
  navWidth,
  initialBackgroundHeight,
  customBackgroundImage = '',
  homeBackground,
  partnerBackground,
} = Astro.props;

import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

---

<!doctype html>
<html class="" lang="en">
<head> 
  <!-- Google tag (gtag.js) -->
  <script is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-737S43Q676"></script>
  <script is:inline>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'G-737S43Q676');
  </script>
  <!-- Apollo Tracking -->
  <script is:inline>
    function initApollo(){
      var n=Math.random().toString(36).substring(7),
      o=document.createElement("script");
      o.src="https://assets.apollo.io/micro/website-tracker/tracker.iife.js?nocache="+n,
      o.async=!0,
      o.defer=!0,
      o.onload=function(){window.trackingFunctions.onLoad({appId:"661828a26ada79030180806a"})},
      document.head.appendChild(o)
    }
    initApollo();
  </script>
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} metadata={metadata} />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- GSAP for animations -->
  <script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js"></script>
</head>
<body class={`flex flex-col min-h-screen ${partnerBackground ? 'partner-background' : ''} ${homeBackground ? 'home-background' : ''}`}>
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLCM6ZWF"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  <Header background={headerBackground} gradient={gradient} iconColor={headerIconColor} logoColor={headerLogoColor} width={navWidth} />
  <Dialog />
  {initialBackgroundHeight && (
    <div class={`your-div-class`}></div>
  )}
  <main class="flex-grow content">
    <slot />
  </main>
  <Footer theme={footerBackground} gradient={footerLogoGradient} />
</body>
</html>

<style define:vars={{ customBackgroundImage }}>
.your-div-class {
  position: absolute;
  left: 0;
  right: 0;
  width: 100vw;
  background-color: white;
  height: calc(var(--sectionAHeight) + 100px);
  z-index: -10;
}

body {
  height: 100%;
  margin: 0;
  padding: 0;
  position: relative;
  min-height: 100vh;
  overflow-x: hidden;
  z-index: 0;
}

.home-background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 1) 0%,
    var(--blue) 50%,
    var(--dark-blue) 100%
  );
  z-index: -2;
}

.home-background::after {
  display: none;
}

.partner-background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, 
    var(--blue) 0%,
    var(--dark-blue) 100%
  );
  z-index: -2;
}

.partner-background {
  position: relative;
  min-height: 100vh;
}

main {
  flex: 1 0 auto;
  position: relative;
  z-index: 1;
  transform: translateZ(0);
  will-change: transform;
}

.content {
  position: relative;
  z-index: 1;
  isolation: isolate;
  transform: translateZ(0);
}

header {
  position: relative;
  z-index: 10;
}

.gradient {
  position: absolute;
  top: 2240px; /* Start exactly where the background image ends */
  left: 0;
  width: 100%;
  height: calc(100vh - 2240px); /* Fill the rest of the viewport height */
  background: linear-gradient(to bottom, var(--blue), var(--dark-blue)) no-repeat;
  z-index: 0;
}


  .conic {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        left: -50%;
        top: -50%;
        width: 200%;
        height: 200%;
        background: conic-gradient(transparent, rgba(168, 239, 255, 1), transparent 30%);
        animation: rotate 4s linear infinite;
    }
}

.border-path {
    width: 200px;
    height: 100px;
    border: 10px solid;
    border-image: linear-gradient(45deg, gold, deeppink) 1;
    clip-path: inset(0px round 10px);
    animation: huerotate 6s infinite linear;
    filter: hue-rotate(360deg);
}

@keyframes huerotate {
    0% {
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

@keyframes rotate {
    100% {
        transform: rotate(1turn);
    }
}


/* Text size adjustments for small screens */
@media (max-width: 640px) {
  h1 {
    font-size: calc(2rem + 1.5vw); /* Adjusts size dynamically between specified max and min sizes */
    width: calc(80vw);
  }
}

@media (max-width: 480px) {
  h1 {
    font-size: 1.875rem; /* text-3xl in Tailwind, adjust as needed */
  }
}
</style>