---
import BaseHead from './BaseHead.astro';
import Header from './Header.astro';
import Dialog from './Dialog.astro';
import Footer from './Footer.astro';

const { 
  metadata = {},
  title, 
  description, 
  footerLogoGradient=true,
  gradient=false, 
  headerBackground='transparent', 
  headerIconColor='blue', 
  footerBackground='white',
  customBackground=false,
  logoColor='blue',
  headerLogoColor='blue',
  backgroundColorScript=false,
  navWidth,
  initialBackgroundHeight,
  customBackgroundImage = '', // Add this line
  homeBackground,
  partnerBackground,
} = Astro.props;

import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

---

<!doctype html>
<html class="" lang="en">
<head> 
  <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} metadata={metadata} />
  <!-- Google Tag Manager -->
  <script>
    (function(w: any, d, s, l, i) {
      w[l] = w[l] || [];
      w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
      var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s) as HTMLScriptElement,
          dl = l != 'dataLayer' ? '&l=' + l : '';
      j.async = true;
      j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
      if (f && f.parentNode) {
        f.parentNode.insertBefore(j, f);
      }
    })(window, document, 'script', 'dataLayer', 'GTM-KLCM6ZWF');
  </script>
  <!-- End Google Tag Manager -->
  <script is:inline>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-NFTM6LJDXW');
  </script>
  <!-- End Google Tag Manager -->
  <!--  <base href="https://onetier.com/">   -->
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body class={`bg-white flex flex-col min-h-screen ${partnerBackground ? 'partner-background' : ''} ${homeBackground ? 'home-background' : ''}`}>
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KLCM6ZWF"
  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
  <Header background={headerBackground} gradient={gradient} iconColor={headerIconColor} logoColor={headerLogoColor} width={navWidth} />
  <Dialog />
  {initialBackgroundHeight && (
    <div class={`your-div-class`}></div>
  )}
  <main class="flex-grow content">
    <slot />
  </main>
  <Footer theme={footerBackground} gradient={footerLogoGradient} />
  {backgroundColorScript && (
    <script is:inline type="module" src="/helpers/backgroundColor.js"></script>
  )}
</body>
</html>

<style define:vars={{ customBackgroundImage }}>
.your-div-class {
  position: absolute;
  left: 0;
  right: 0;
  width: 100vw;
  background-color: white;
  height: calc(var(--sectionAHeight) + 100px);
  z-index: -10;
}

body {
  height: 100%;
  margin: 0;
  padding: 0;
  position: relative;
  min-height: 100vh;
  overflow-x: hidden;
  z-index: 0;
}

.home-background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2440px;
  background: url('/backgroundImage.jpg') top center no-repeat;
  background-size: cover;
  z-index: -1;
}

.home-background::after {
  content: '';
  position: absolute;
  top: 2440px;
  left: 0;
  width: 100%;
  height: 100vh;
  background: linear-gradient(to bottom, var(--blue), var(--dark-blue)) no-repeat;
  z-index: -1;
}

.partner-background{
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  background: url('/waves.png') top center no-repeat;
  background-size: stretch, 1000px;
  background-repeat: no-repeat;
  padding-bottom: 20px;
  z-index: -1;
}

main {
  flex: 1 0 auto;
  position: relative;
  z-index: 1;
}

.content {
  position: relative;
  z-index: 1;
}

.gradient {
  position: absolute;
  top: 2240px; /* Start exactly where the background image ends */
  left: 0;
  width: 100%;
  height: calc(100vh - 2240px); /* Fill the rest of the viewport height */
  background: linear-gradient(to bottom, var(--blue), var(--dark-blue)) no-repeat;
  z-index: 0;
}


  .conic {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        left: -50%;
        top: -50%;
        width: 200%;
        height: 200%;
        background: conic-gradient(transparent, rgba(168, 239, 255, 1), transparent 30%);
        animation: rotate 4s linear infinite;
    }
}

.border-path {
    width: 200px;
    height: 100px;
    border: 10px solid;
    border-image: linear-gradient(45deg, gold, deeppink) 1;
    clip-path: inset(0px round 10px);
    animation: huerotate 6s infinite linear;
    filter: hue-rotate(360deg);
}

@keyframes huerotate {
    0% {
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

@keyframes rotate {
    100% {
        transform: rotate(1turn);
    }
}


/* Text size adjustments for small screens */
@media (max-width: 640px) {
  h1 {
    font-size: calc(2rem + 1.5vw); /* Adjusts size dynamically between specified max and min sizes */
    width: calc(80vw);
  }
}

@media (max-width: 480px) {
  h1 {
    font-size: 1.875rem; /* text-3xl in Tailwind, adjust as needed */
  }
}
</style>