---
import Layout from '../components/Layout.astro';
import Features from '../components/Features.astro';
import DottedPathSVG from '../components/DottedPathSVG.astro';
import pages from '../data/pages.json';

if (!pages) {
  throw new Error('Page info not found');
}

if (!pages.products) {
  throw new Error('Product info not found');
}

const product = pages.products.pages.find(product => product.label === "Global Data Security");

if (!product) {
  throw new Error('Product with label "Global Data Security" not found');
}

const { pageContent } = product;

if (!pageContent) {
  throw new Error('Page content not found');
}

const features = pageContent.features;

const buttons = [
  { text: 'Benefits', href: '#benefits' },
  { text: 'Features', href: '#features' },
  { text: 'Visual Guide', href: '#visual-guide' }
];

const customYOffset = 100; // Set your desired offset here
const gradient = false;
const metadata = pageContent.metadata;
---
<Layout headerLogoColor='white' headerIconColor='white' gradient={gradient} backgroundColorScript={true} metadata={metadata}>
    <div class="initial-div relative text-white overflow-hidden">
      <div class="mb:hidden w-screen overflow-visible">
      <DottedPathSVG
        uniqueId="line-1"
        targetDivClass="button-container"
        strokeWidth={4}
        strokeDasharray="5,5"
        circleRadius={10}
        animationDuration={10}
        glowDistance={2.5}
        initialYOffset={customYOffset}
        startY={65}
        strokeColor="white"
        circleColor="white"
        glowColor={null}
        targetDivXPosition="right"
        targetDivYPosition="center"
        semiRect={false}
      />
      <DottedPathSVG
        uniqueId='line-2'
        targetDivClass="main-content"
        strokeWidth={4}
        strokeDasharray="5,5"
        circleRadius={10}
        animationDuration={10}
        glowDistance={2.5}
        initialYOffset={20}
        startY={65}
        strokeColor="white"
        circleColor="white"
        glowColor={null}
        targetDivXPosition="center"
        targetDivYPosition="center"
        flipped={true}
        semiRect={true}
        height={675}
        loopReverse={true}
        />
      </div>
      <div class="dt:hidden">
        <DottedPathSVG
          uniqueId="line-3"
          targetDivClass="initial-div"
          strokeWidth={4}
          strokeDasharray="5,5"
          circleRadius={10}
          animationDuration={10}
          glowDistance={2.5}
          initialYOffset={15}
          startY={65}
          strokeColor="white"
          circleColor="white"
          glowColor={null}
          targetDivXPosition="right"
          targetDivYPosition="top"
          semiRect={false}
          simpleHorizontal={true}
          loopReverse={true}
        />
      </div>
      <div class="layoutConstraint main-content justify-center pt-20 ">
        <div class="flex justify-between items-start ">
          <div class="logo flex flex-row dt:justify-between mb:flex-col-reverse w-full">
            <div class="relative content  dt:w-[62.5%] mb:w-full mb:flex mb:flex-col mb:items-center ">
              <p id="product-label" class="text-6xl font-bold mb-4 drop-shadow-lg mb:text-center "
              set:html={pageContent.title} >
              </p>
              <p class="text-3xl mb-8 mb:text-center">
                  {pageContent.subtitle}
              </p>
            </div>
            <img src={product.iconSrc} alt={product.iconAlt} class=" productIcon dt:w-[30%] filter-white mb:w-[50%] dt:place-self-end mb:mb-9 mb:place-self-center"/>
          </div>
        </div>
        <div class="button-container relative w-full mt-10">
          <div class="buttons flex flex-row justify-between">
              {buttons.map((button, index) => (
                <a
                  href={button.href}
                  class={`button-${index} gradient-button button-gradient text-white py-2 hover:text-white transition-colors dt:w-[30%] dt:h-12 mb:max-w-[180px] mb:w-[25vw] min-w-[60px] text-center font-bold rounded-2xl button-text`}
                  id={`nav-${button.href.substring(1)}`}
                >
                  {button.text}
                </a>
              ))}
            </div>
          </div>
          <div class="mt-16 mb-16 flex flex-col space-x-10 mb:space-x-0 mb:flex-col-reverse">
            
            <div id="benefits" class="w-full">
              <p class="text-5xl mb-8 font-semibold mb:text-center">
                Benefits
              </p>
              <div class="right-20">
                <p class="text-xl mb:text-center">
                  {pageContent.benefits?.subtitle || "At OneTier, we offer data aggregation for your business environments, so you can see exactly what is happening, and where it is happening."}
                </p>
              </div>
              <div class="dt:pt-12 mb:pt-6">
                <img src={pageContent.benefits.graphicSrc} alt={pageContent.benefits.graphicAlt} class="w-full" />
              </div>
            </div>
          </div>
          <Features features={features} />
          <div class="mt-16 mb-16 flex flex-row min-h-[250px] mb:min-h-[55vw] space-x-8 mb:space-x-0 mb:flex-col">
            <div id="visual-guide" class="flex flex-col dt:max-w-[40%] mb:mb-4">
            <p class="text-5xl mb-8 font-semibold mb:text-center">
              Visual Guide
            </p>
            <p class="mb:text-center text-md">
              {pageContent['visual-guide']?.subtitle || "At OneTier, we offer data aggregation for your business environments, to you can see exactly what is happening, and where it is happening."}
            </p>
          </div>
          <div class="video-container flex-1 flex items-center justify-center mb:h-[55vw]">
            <div class="relative w-full" style="padding-bottom: 56.25%;">
              {pageContent['visual-guide']?.graphicSrc && pageContent['visual-guide']?.isVideo ? (
                <iframe 
                  class="absolute top-0 left-0 w-full h-full border-4 border-dashed" 
                  src={pageContent['visual-guide'].graphicSrc}
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                  allowfullscreen
                ></iframe>
              ) : (
                <img 
                  class="absolute top-0 left-0 w-full h-full object-cover border-4 border-dashed" 
                  src={pageContent['visual-guide']?.graphicSrc || "/content-placeholder.jpg"}
                  alt="Visual Guide"
                />
              )}
            </div>
          </div>
            </div>
          </div>
        </div>
      </div>
  </div>
  </Layout>
  
  <style>
    #product-label{
      font-size: clamp(1.5rem, 7vw + 1rem, 6rem);
    }
    .button-gradient {
      background: linear-gradient(0deg, var(--orange), var(--dark-orange));
      cursor: pointer;
      
    }
    .button-gradient:hover, .button-gradient:focus {
      background: radial-gradient(circle at var(--x, 50%) var(--y, 50%), #FF8500, #FF5700);
  }
  
  * {
      box-sizing: border-box;
  }
  
  .button-text{
    font-size: clamp(.25rem, .75vw + .50rem, 2rem);
  }
  
  </style>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const internalLinks = document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]');
      
      internalLinks.forEach(link => {
        link.addEventListener('click', (e: Event) => {
          e.preventDefault();
          
          const href = link.getAttribute('href');
          if (href) {
            const targetId = href.substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
              targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          }
        });
      });
    });
  </script>