---
import Layout from '../components/Layout.astro';
import type { Post } from '../types';
import { GET_NEWS_ITEMS } from '../queries';

async function getPosts() {
  try {
    console.log('Fetching posts...');
    const res = await fetch('https://onetier.com/graphql', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        query: GET_NEWS_ITEMS,
      }),
    });

    if (!res.ok) {
      console.error('Failed to fetch data:', res.statusText, "Entire response:", res);
      return [];
    }

    const jsonData = await res.json();
    if (!jsonData.data || !jsonData.data.posts || !jsonData.data.posts.nodes) {
      console.error('Unexpected API response structure:', jsonData);
      return [];
    }

    const posts = jsonData.data.posts.nodes;
    console.log("Posts fetched successfully");
    return posts;
  } catch (error) {
    console.error('Error fetching posts:', error);
    return [];
  }
}

const posts: Post[] = await getPosts();
const sortedPosts = posts.sort((a, b) =>
  new Date(b.date).getTime() - new Date(a.date).getTime()
);

const recentNews = sortedPosts.slice(0, 3);
const moreNews = sortedPosts.slice(3, 9);

function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

const hasNews = recentNews.length > 0;
---

<Layout headerLogoColor='blue' headerIconColor='blue' headerBackground='bg-white' gradient={true}>
  <section class="bg-white py-16 text-blue">
    <div class="layoutConstraint">
      <h2 class="text-3xl font-bold mb-6">News</h2>
      {hasNews ? (
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-12">
          {recentNews.map((post) => (
            <div class="bg-blue aspect-square p-4">
              <h3 class="text-white font-bold">{post.title}</h3>
              <p class="text-white">{formatDate(post.date)}</p>
              <!-- Add more post content as needed -->
            </div>
          ))}
          <div class="col-span-full text-right">
            <a href="/news" class="text-blue hover:underline">&gt; View all news</a>
          </div>
        </div>
      ) : (
        <p>No news articles available at the moment.</p>
      )}

      {moreNews.length > 0 && (
        <>
          <h2 class="text-3xl font-bold mb-6">More News</h2>
          <table class="w-full">
            <thead>
              <tr>
                <th class="text-left">Title</th>
                <th class="text-left">Date</th>
              </tr>
            </thead>
            <tbody>
              {moreNews.map(post => (
                <tr>
                  <td>{post.title}</td>
                  <td>{formatDate(post.date)}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </>
      )}
    </div>
  </section>
</Layout>

<style>
  table {
    border-collapse: separate;
    border-spacing: 0 1em;
  }
  td, th {
    padding: 0.5em 0;
  }
  tr:not(:last-child) {
    border-bottom: 1px solid #eaeaea;
  }
</style>