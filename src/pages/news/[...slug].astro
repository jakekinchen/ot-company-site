---
// File: src/pages/blog/[...slug].astro

import BlogPost from '../../layouts/BlogPost.astro';
import type { Post } from '../../types';
import { getAllNewsPosts, getPostData } from '../../lib/blogPosts';

export async function getStaticPaths() {
  try {
    const allNewsPosts = await getAllNewsPosts();

    const paths = await Promise.all(allNewsPosts.map(async (post) => {
      const postData = await getPostData(post.slug);
      if (!postData) return null;

      return {
        params: { slug: post.slug },
        props: { post: postData },
      };
    }));

    return paths.filter((path): path is { params: { slug: string }, props: { post: Post } } => path !== null);
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    return [];
  }
}

interface Props {
  post: Post;
}

const { post } = Astro.props as Props;
---

<BlogPost
  title={post.title}
  date={new Date(post.date)}
  author={post.author.node.name}
  categories={post.categories.nodes.map(category => category.name).join(', ')}
  tags={post.tags.nodes.map(tag => tag.name).join(', ')}
  excerpt={post.excerpt}
  featuredImage={post.featuredImage}
>
  <div class="content" set:html={post.content} />
</BlogPost>