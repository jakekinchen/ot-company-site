---
import Layout from '../components/Layout.astro';
import ProfileCircle from '../components/ProfileCircle.astro';
import { teamMembers } from '../data/pages.json'; 
import { company } from '../data/pages.json';
import PathMaker from '../components/PathMaker.astro';
const glowDistance = 5;
const teamMemberCount = teamMembers.length-1;
if (!company) {
  throw new Error('Company info not found');
}
const leadershipInfo = company.pages.find(page => page.label === "Leadership");
if (!leadershipInfo) {
  throw new Error('Leadership info not found');
}
const metadata = leadershipInfo.metadata;
if (!metadata) {
  throw new Error('Metadata not found');
}

---
<Layout headerLogoColor='blue' headerIconColor='blue' headerBackground='bg-white' gradient={true} metadata={metadata}>
  <section class="bg-white py-16 text-blue">
    <div>
      <PathMaker
        startEdge={'left'}
        startY={[`profileCircle-${teamMemberCount}`, 'center']}
        offsetStartY={-80}
        offsetEndX={20}
        endY={[`profileCircle-${teamMemberCount}`, 'center']}
        endX={[`profileCirclesContainer`, 'left']}
        strokeColor="blue"
        circleColor="blue"
        animationDuration={5}
        animationDelay={0}
        uniqueId={`path1`}
        glowDistance={glowDistance}
        strokeDasharray="5,5"
        circleRadius={10}
        hideOnMobile={true}
    />
    <PathMaker
        startEdge={'right'}
        startY={[`profileCircle-${teamMemberCount}`, 'center']}
        offsetStartY={80}
        offsetEndX={-20}
        endY={[`profileCircle-${teamMemberCount}`, 'center']}
        endX={[`profileCirclesContainer`, 'right']}
        strokeColor="blue"
        circleColor="blue"
        animationDuration={5}
        animationDelay={6}
        reverseAnimation={true}
        uniqueId={`path2`}
        glowDistance={glowDistance}
        strokeDasharray="5,5"
        hideOnMobile={true}
    />
    </div>
    <div class="custom-container mx-auto">
      <h1 class="text-6xl font-bold text-center mb-4">Meet our<br>Leadership Team</h1>
      <p class="text-center text-2xl mb-16">Driving Innovation and Excellence</p>
      
      <div id="profileCirclesSection" class="flex justify-center mb-16 w-full">
        <div id="profileCirclesContainer" class="mx-auto flex flex-wrap max-w-[1100px] dt:gap-16 mb:gap-8 justify-center">
          {teamMembers.map((member, index) => (
            <ProfileCircle 
              imageSrc={member.imageSrc} 
              name={member.name} 
              title={member.title} 
              hasBackground={true} 
              backgroundColor='blue' 
              circleWidth={130} 
              nameColor="blue"
              titleColor="blue"
              id={`profileCircle-${index}`}
            />
          ))}
        </div>
      </div>

      <!-- add horizontal blue line here -->


      <h2 class="text-4xl font-bold text-center mb-12">A Bit About Us</h2>
      
      <div class="grid grid-cols-1 dt:grid-cols-2 gap-8 mt-16 mb:mx-8 dt:mx-auto px-8 dt:max-w-[1100px] align-self-center">
        
        {teamMembers.map((member, index) => (
            <div>
          <div id={`bio-image-${index}`} class="bg-light-blue dt:rounded-full mb:rounded-full rounded-xl flex mb:flex-col dt:items-center mb:items-start h-32 w-full dt:pt-4">
            <div class="flex items-center gap-8">
                <img src={member.imageSrc} alt={member.name} 
                class="w-32 h-32 rounded-full object-cover mb-4" 
                />
                <div>
                    <h3 class="text-2xl font-bold text-white">{member.name}</h3>
                    <p class="text-lg text-white mb-4">{member.title}</p>
                </div>
            </div>
            
          </div>
          <p class="text-blue m-4">
                {member.bio}
              </p>
            </div>
        ))}
        
      </div>
    </div>
  </section>
</Layout>

<style>
    .grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 10px;
}

.grid-item {
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  padding: 20px;
  text-align: center;
}

.grid-container > .grid-item:nth-last-child(1):nth-child(3n-2),
.grid-container > .grid-item:nth-last-child(2):nth-child(3n-1),
.grid-container > .grid-item:nth-last-child(3):nth-child(3n) {
  justify-self: stretch;
}

.grid-container:has(.grid-item:nth-last-child(1):nth-child(3n-2)),
.grid-container:has(.grid-item:nth-last-child(2):nth-child(3n-1)),
.grid-container:has(.grid-item:nth-last-child(3):nth-child(3n)) {
  justify-content: space-between;
}

h1 {
    color: var(--blue);
}
  
</style>