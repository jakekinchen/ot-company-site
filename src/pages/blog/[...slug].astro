---
// File: src/pages/blog/[...slug].astro
import BlogPost from '../../layouts/BlogPost.astro';
import type { PostNode } from '../../lib/wpFunctions';
import { getAllPostSlugs, getPostData } from '../../lib/wpFunctions';

export async function getStaticPaths() {
  try {
    const allBlogSlugs = await getAllPostSlugs("Blog");
    const paths = await Promise.all(allBlogSlugs.map(async (slug: string) => {
      const postData = await getPostData(slug);
      if (!postData) return null;
      return {
        params: { slug },
        props: { post: postData },
      };
    }));
    return paths.filter((path): path is { params: { slug: string }, props: { post: PostNode } } => path !== null);
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    return [];
  }
}

interface Props {
  post: PostNode;
}

const { post } = Astro.props;
---

<BlogPost
  title={post.title}
  date={new Date(post.date)}
  author={post.author.node.name}
  categories={post.categories.nodes.map(category => category.name).join(', ')}
  tags={post.tags.nodes}
  excerpt={post.excerpt}
  featuredImage={post.featuredImage}
  content={post.content}
>
</BlogPost>